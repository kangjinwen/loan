<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- hous_bills表:放款单/打款单模块 -->
<mapper namespace="com.company.modules.audit.dao.HousBillsDao">
	<!--返回MAP-->		
	<resultMap id="HousBillsResult" type="HousBills">
		<id column="id" property="id" />
		<result column="creator" property="creator" />
		<result column="create_time" property="createTime" />
		<result column="modifier" property="modifier" />
		<result column="modify_time" property="modifyTime" />
		<result column="account_holder_name" property="accountHolderName" />
		<result column="cardid" property="cardid" />
		<result column="bank_flag" property="bankFlag" />
		<result column="bank_name" property="bankName" />
		<result column="account" property="account" />
		<result column="process_instance_id" property="processInstanceId"/>
		<result column="type" property="type" />
		<result column="third_card_number" property="thirdCardNumber" />
		<result column="third_bank_account" property="thirdBankAccount" />
		<result column="third_account_opening" property="thirdAccountOpening" />
		<result column="third_account" property="thirdAccount" />
		<result column="third_transfer_fee" property="thirdTransferFee" />
		<result column="remark" property="remark" />
		<result column="purpose" property="purpose" />
	</resultMap>
	
	<!--基本的sql查询字段 公共引用...-->
	<sql id="searchSql">
			id,
			creator,
			create_time,
			modifier,
			modify_time,
			account_holder_name,
			cardid,
			bank_flag,
			bank_name,
			account,
			process_instance_id,
			type,
			third_card_number,
			third_bank_account,
			third_account_opening,
			third_account,
			third_transfer_fee,
			remark,
			purpose
						
	</sql>
	
	<!-- 基本的sql查询条件公共引用 -->
	<sql id="searchByPo">
		<trim prefix="where" prefixOverrides="and|or">
			<if test="id !='' and id !=null">
                id  = #{id}
            </if>
            <if test="creator !='' and creator !=null">
            	and creator = #{creator}
            </if>
            <if test="createTime !='' and createTime !=null">
            	and create_time = #{createTime}
            </if>
            <if test="modifier !='' and modifier !=null">
            	and modifier = #{modifier}
            </if>
            <if test="modifyTime !='' and modifyTime !=null">
            	and modify_time = #{modifyTime}
            </if>
            <if test="accountHolderName !='' and accountHolderName !=null">
            	and account_holder_name = #{accountHolderName}
            </if>
            <if test="cardid !='' and cardid !=null">
            	and cardid = #{cardid}
            </if>
            <if test="bankFlag !='' and bankFlag !=null">
            	and bank_flag = #{bankFlag}
            </if>
            <if test="bankName !='' and bankName !=null">
            	and bank_name = #{bankName}
            </if>
            <if test="account !='' and account !=null">
            	and account = #{account}
            </if>
            <if test="processInstanceId !='' and processInstanceId !=null">
            	and process_instance_id = #{processInstanceId}
            </if>
            <if test="type !='' and type !=null">
            	and type = #{type}
            </if>
            <if test="remark !='' and remark !=null">
            	and remark = #{remark}
            </if>
             <if test="purpose !='' and purpose !=null">
            	and purpose = #{purpose}
            </if>
		</trim>
	</sql>
	
	<!-- 动态更新 -->
    <sql id="updateByPo">
       	<trim prefix="set" suffixOverrides=",">
	    	<if test="modifier!= null">		
	    		modifier = #{modifier},		
	    	</if>
	    	<if test="modifyTime!= null">		
	    		modify_time = #{modifyTime},		
	    	</if>
	    	<if test="accountHolderName!= null">		
	    		account_holder_name = #{accountHolderName},		
	    	</if>
	    	<if test="cardid!= null">		
	    		cardid = #{cardid},		
	    	</if>
	    	<if test="bankFlag!= null">		
	    		bank_flag = #{bankFlag},		
	    	</if>
	    	<if test="bankName!= null">		
	    		bank_name = #{bankName},		
	    	</if>
	    	<if test="account!= null">		
	    		account = #{account},		
	    	</if>
	    	<if test="processInstanceId != null">		
	    		process_instance_id = #{processInstanceId},		
	    	</if>
	    	<if test="type!= null">		
	    		type = #{type},		
	    	</if>
	    	<if test="remark!= null">		
	    		remark = #{remark},		
	    	</if>
	    	<if test="purpose!= null">		
	    		purpose = #{purpose},		
	    	</if>
	    	<if test="thirdTransferFee!= null">		
	    		third_transfer_fee = #{thirdTransferFee},		
	    	</if>
	    	<if test="thirdAccount!= null">		
	    		third_account = #{thirdAccount},		
	    	</if>
	    	<if test="thirdCardNumber!= null">		
	    		third_card_number = #{thirdCardNumber},		
	    	</if>
	    	<if test="thirdBankAccount!= null">		
	    		third_bank_account = #{thirdBankAccount},		
	    	</if>
	    	<if test="thirdAccountOpening!= null">		
	    		third_account_opening = #{thirdAccountOpening},		
	    	</if>
	    </trim>
    </sql>
	
	<!-- 动态的插入,必须要创建时间 -->
	<insert id="insert" parameterType="HousBills">
		insert into hous_bills(
        	creator,
        	create_time,
        	modifier,
        	modify_time,
        	account_holder_name,
        	cardid,
        	bank_flag,
        	bank_name,
        	account,
        	process_instance_id,
        	type,
        	third_card_number,
        	third_bank_account,
        	third_account_opening,
        	third_account,
        	third_transfer_fee,
        	remark,
        	purpose			
        )values(
        	#{creator},
        	#{createTime},
        	#{modifier},
        	#{modifyTime},
        	#{accountHolderName},
        	#{cardid},
        	#{bankFlag},
        	#{bankName},
        	#{account},
        	#{processInstanceId},
        	#{type},
        	#{thirdCardNumber},
        	#{thirdBankAccount},
        	#{thirdAccountOpening},
        	#{thirdAccount},        	
        	#{thirdTransferFee},
        	#{remark},
        	#{purpose}						
        )
     <!-- 重新返回给实体类,插入的id值 -->
     <selectKey resultType="long" keyProperty="id">
		SELECT LAST_INSERT_ID() AS ID
	 </selectKey>
	 </insert>
	
    <!-- 动态更新 -->
    <update id="update" parameterType="HousBills">
        update hous_bills
        <include refid="updateByPo"/>
        where id = #{id}
    </update>

	<!--根据id查询-->
	<select id="getItemInfoById" resultMap="HousBillsResult" parameterType="long" >
		select 
		<include refid="searchSql"/>
		from hous_bills
		where id = #{id}	
	</select>
	
	<!--根据流程id查询-->
	<select id="getItemInfoByProcessInstanceId" resultMap="HousBillsResult" parameterType="java.lang.String" >
		select 
		<include refid="searchSql"/>
		from hous_bills
		where process_instance_id = #{processInstanceId}	
	</select>
	
	<select id="getItemInfoByProcessInstanceIdAndType" resultMap="HousBillsResult" parameterType="java.util.HashMap" >
		select 
		<include refid="searchSql"/>
		from hous_bills
		where process_instance_id = #{processInstanceId} and type = #{type}
	</select>
	
	<!--分页列表查询-->
	<select id="getPageListByMap" resultMap="HousBillsResult" parameterType="java.util.HashMap" >
		select 
		<include refid="searchSql"/>
		from hous_bills
		<include refid="searchByPo"/>	
		order by id asc
	</select>
	
	<select id="getHousBillBasicInfo" resultType="java.util.HashMap" parameterType="string">
		SELECT
			pp.`code` as projectCode,
			pc.`name` as customerName,
			pb.account,
			pb.time_limit as timeLimit,
			hlc.receivable_account as receivableAccount,
			hlc.actual_fee actualFee,
			hlc.collection_form as collectionForm,
			pb.single_rate as singleRate,
			pb.repayment_rate as repaymentRate,
			pbr.financial_advisers as financialAdvisers,
			pbr.salesman,
			pbr.institution_name as institutionName,
			pbr.project_belongs as projectBelongs,
			pb.single_rate as singleRate,
			hlo.collection_service_fee as collectionServiceFee,
			hlo.return_service_fee as returnServiceFee,
			hlo.collection_service_name as collectionServiceName,
			hlo.collection_service_card as collectionServiceCard,
			hlo.collection_service_bank as collectionServiceBank,
			ROUND(pb.single_rate * pb.account,2) as firstInterest
		FROM
			pub_project pp
		INNER JOIN pl_consult pc ON pc.project_id = pp.id
		INNER JOIN pl_borrow pb ON pb.project_id = pp.id
		INNER JOIN hous_lower_cost hlc ON hlc.project_id = pp.id
		INNER JOIN pl_borrow_requirement pbr ON pbr.project_id = pp.id
		INNER JOIN pl_product pro ON pro.id = pbr.product_id
		left join hous_loanfees hlo on hlo.project_id = pc.project_id
		where pc.process_instance_id = #{processInstanceId}
	</select>
	
	<select id="getLoanInfo" resultType="java.util.HashMap" parameterType="string">
		SELECT
			pp.`code` AS projectCode,
			pc.`name` AS customerName,
			pp.project_name AS projectName,
			hb.account AS lendAccount,
			hb.cardId,
			hb.bank_flag AS bankFlag,
			hb.bank_name AS bankName,
			hb.process_instance_id as processInstanceId
		FROM
			pub_project pp
		INNER JOIN pl_consult pc ON pc.project_id = pp.id
		INNER JOIN pl_borrow pb ON pb.project_id = pp.id
		INNER JOIN hous_bills hb ON hb.process_instance_id = pb.process_instance_id
		AND hb.type = 'lend'
		where hb.process_instance_id = #{processInstanceId}
	</select>

    <!--根据ID删除-->
    <delete id="deleteById">
        delete from hous_bills
        where
        id  = #{id}
    </delete>

	<insert id="addAppointmentInfo">
		INSERT INTO sys_appointment_info (
		NAME,
		phone,
		remark,
		type,
		create_time,
		appoint_time,
		modify_time,
		proc_inst_id
	)
	VALUES
		(#{name},
		 #{phone},
		 #{remark},
		 #{type},
		 #{createTime},
		 #{appointTime},
		 #{modifyTime},
		 #{procDefId})
	</insert>

	<select id="getAppointmentInfoCountByAnyKey" resultType="java.lang.Integer">
		select count(*)
		from
		sys_appointment_info
		where 1=1
		<if test="procDefId!= null">
			and proc_inst_id = #{procDefId}
		</if>
		<if test="name!= null">
			and name = #{name}
		</if>
		<if test="phone!= null">
			and phone = #{phone}
		</if>
		<if test="type!= null">
			and type = #{type}
		</if>
		<if test="beginTime!= null">
			and appoint_time &gt; #{beginTime}
		</if>
		<if test="endTime!= null">
			and appoint_time &lt; #{endTime}
		</if>

		<!--<if test="beginNum!= null">
			limit ${beginNum},${checkNum}
		</if>-->


	</select>
	<select id="getAppointmentInfoByAnyKey" resultType="java.util.Map">
		select
		create_time AS createTime,
		phone,
		modify_time AS modifyTime,
		name,
		proc_inst_id AS processInstanceId,
		remark,
		id,
		type,
		appoint_time AS appointTime
		from
		sys_appointment_info
		where 1=1
		<if test="procDefId!= null">
			and proc_inst_id = #{procDefId}
		</if>
		<if test="name!= null">
			and name = #{name}
		</if>
		<if test="phone!= null">
			and phone = #{phone}
		</if>
		<if test="type!= null">
			and type = #{type}
		</if>
		<if test="beginTime!= null">
			and appoint_time &gt; #{beginTime}
		</if>
		<if test="endTime!= null">
			and appoint_time &lt; #{endTime}
		</if>
		ORDER BY
		id DESC
		<if test="beginNum!= null">
			limit ${beginNum},${checkNum}
		</if>
	</select>
</mapper>