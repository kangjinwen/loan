<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- pub_anrong_attachment表:安融附件模块 -->
<mapper namespace="com.company.modules.anrong.dao.PubAnrongAttachmentDao">
	<!--返回MAP-->		
	<resultMap id="PubAnrongAttachmentResult" type="PubAnrongAttachment">
		<id column="id" property="id" />
		<result column="creator" property="creator" />
		<result column="create_time" property="createTime" />
		<result column="modifier" property="modifier" />
		<result column="modify_time" property="modifyTime" />
		<result column="is_delete" property="isDelete" />
		<result column="file_type" property="fileType" />
		<result column="file_name" property="fileName" />
		<result column="file_size" property="fileSize" />
		<result column="file_path" property="filePath" />
	</resultMap>
	
	<!--基本的sql查询字段 公共引用...-->
	<sql id="searchSql">
			id,
			creator,
			create_time,
			modifier,
			modify_time,
			is_delete,
			file_type,
			file_name,
			file_size,
			file_path			
	</sql>
	
	<!-- 基本的sql查询条件公共引用 -->
	<sql id="searchByPo">
		<trim prefix="where" prefixOverrides="and|or">
			<if test="id !='' and id !=null">
                id  = #{id}
            </if>
            <if test="creator !='' and creator !=null">
            	and creator = #{creator}
            </if>
            <if test="createTime !='' and createTime !=null">
            	and create_time = #{createTime}
            </if>
            <if test="modifier !='' and modifier !=null">
            	and modifier = #{modifier}
            </if>
            <if test="modifyTime !='' and modifyTime !=null">
            	and modify_time = #{modifyTime}
            </if>
            <if test="isDelete !='' and isDelete !=null">
            	and is_delete = #{isDelete}
            </if>
            <if test="fileType !='' and fileType !=null">
            	and file_type = #{fileType}
            </if>
            <if test="fileName !='' and fileName !=null">
            	and file_name = #{fileName}
            </if>
            <if test="fileSize !='' and fileSize !=null">
            	and file_size = #{fileSize}
            </if>
            <if test="filePath !='' and filePath !=null">
            	and file_path = #{filePath}
            </if>
		</trim>
	</sql>
	
	<!-- 动态更新 -->
    <sql id="updateByPo">
       	<trim prefix="set" suffixOverrides=",">
	    	<if test="modifier != null">		
	    		modifier = #{modifier},		
	    	</if>
	    	<if test="modifyTime != null">		
	    		modify_time = #{modifyTime},		
	    	</if>
	    	<if test="isDelete != null">		
	    		is_delete = #{isDelete},		
	    	</if>
	    	<if test="fileType != null">		
	    		file_type = #{fileType},		
	    	</if>
	    	<if test="fileName != null">		
	    		file_name = #{fileName},		
	    	</if>
	    	<if test="fileSize != null">		
	    		file_size = #{fileSize},		
	    	</if>
	    	<if test="filePath != null">		
	    		file_path = #{filePath},		
	    	</if>
	    </trim>
    </sql>
	
	<!-- 动态的插入,必须要创建时间 -->
	<insert id="insert" parameterType="PubAnrongAttachment" useGeneratedKeys="true">
		insert into pub_anrong_attachment(
        	creator,
        	create_time,
        	modifier,
        	modify_time,
        	is_delete,
        	file_type,
        	file_name,
        	file_size,
        	file_path			
        )values(
        	#{creator},
        	#{createTime},
        	#{modifier},
        	#{modifyTime},
        	#{isDelete},
        	#{fileType},
        	#{fileName},
        	#{fileSize},
        	#{filePath}			
        )
     <!-- 重新返回给实体类,插入的id值 -->
     <selectKey resultType="long" keyProperty="id" order="AFTER">
		SELECT LAST_INSERT_ID() AS ID
	 </selectKey>
	 </insert>
	
    <!-- 动态更新 -->
    <update id="update" parameterType="PubAnrongAttachment">
        update pub_anrong_attachment
        <include refid="updateByPo"/>
        where id = #{id}
    </update>

	<!--根据id查询-->
	<select id="getItemInfoById" resultMap="PubAnrongAttachmentResult" parameterType="long" >
		select 
		<include refid="searchSql"/>
		from pub_anrong_attachment
		where id = #{id}	
	</select>
	
	<!--根据流程id查询-->
	<select id="getItemInfoByProcessInstanceId" resultMap="PubAnrongAttachmentResult" parameterType="java.lang.String" >
		select 
		<include refid="searchSql"/>
		from pub_anrong_attachment
		where process_instance_id = #{processInstanceId}	
	</select>
	
	<!--分页列表查询-->
	<select id="getPageListByMap" resultMap="PubAnrongAttachmentResult" parameterType="java.util.HashMap" >
		select 
		from pub_anrong_attachment
		<include refid="searchByPo"/>	
		order by id desc
	</select>

    <!--根据ID删除-->
    <delete id="deleteById">
        delete from pub_anrong_attachment
        where
        id  = #{id}
    </delete>
    
    
    <select id="queryAttachmentList"  parameterType="java.util.HashMap"  resultMap="PubAnrongAttachmentResult">
<!--  查询每种类型征信最新记录
	select t.id,t.file_name as fileName,t.create_time as createTime, case t.file_type when '1' then 'MSP会员征信报告' when '2' then '个人关联企业征信报告' when  '3' then '司法企业征信报告'  end  as fileType from (
select *
	  from pub_anrong_attachment
	 where id in (select b.file_id
	                from (select file_id
	                        from (select *
	                                from pub_ar_risk_result
	                                 where risk_type in (1)
			                         and project_id = #{projectId}
			                         and consult_id = #{consultId}
			                         and file_id!=0
	                               order by create_time desc
	                               ) as a
	                       group by a.risk_type) b)
	union
	select *
	  from pub_anrong_attachment
	 where id in (select b.file_id
	                from (select file_id
	                        from (select *
	                                from pub_ar_risk_result
	                                 where risk_type in (2,3)
			                         and project_id = #{projectId}
			                         and consult_id = #{consultId}
			                         and file_id!=0
	                               order by create_time desc) as a
	                       group by a.risk_param) b)
) t
-->
<!-- 查询所有征信记录 -->
select  id,file_name as fileName,create_time as createTime, case file_type when '1' then 'MSP会员征信报告' when '2' then '个人关联企业征信报告' when  '3' then '司法企业征信报告'  end  as fileType
	  from pub_anrong_attachment
	 where id in (
	               select  file_id
	                                from pub_ar_risk_result
	                                 where risk_type in (1,2,3)
			                         and project_id = #{projectId}
			                         and consult_id = #{consultId}
			                         and file_id!=0
	                               
	                             
	                      )
order by  fileType,createTime desc
    </select>
</mapper>